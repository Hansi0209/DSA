// File: Data_Structures/LinkedListSequencedCollection.java

import java.util.LinkedList;
import java.util.Iterator;

public class LinkedListSequencedCollection<T> {
    private LinkedList<T> list;

    // Constructor
    public LinkedListSequencedCollection() {
        list = new LinkedList<>();
    }

    // Add element at the front
    public void addFirst(T item) {
        list.addFirst(item);
        System.out.println(item + " added at the beginning.");
    }

    // Add element at the end
    public void addLast(T item) {
        list.addLast(item);
        System.out.println(item + " added at the end.");
    }

    // Remove element from the front
    public T removeFirst() {
        if (list.isEmpty()) {
            System.out.println("Collection is empty. Cannot remove first.");
            return null;
        }
        return list.removeFirst();
    }

    // Remove element from the end
    public T removeLast() {
        if (list.isEmpty()) {
            System.out.println("Collection is empty. Cannot remove last.");
            return null;
        }
        return list.removeLast();
    }

    // Peek at the first element
    public T peekFirst() {
        if (list.isEmpty()) {
            System.out.println("Collection is empty.");
            return null;
        }
        return list.getFirst();
    }

    // Peek at the last element
    public T peekLast() {
        if (list.isEmpty()) {
            System.out.println("Collection is empty.");
            return null;
        }
        return list.getLast();
    }

    // Get size
    public int size() {
        return list.size();
    }

    // Check if empty
    public boolean isEmpty() {
        return list.isEmpty();
    }

    // Display elements
    public void display() {
        System.out.print("Sequenced Collection: ");
        Iterator<T> it = list.iterator();
        while (it.hasNext()) {
            System.out.print(it.next() + " ");
        }
        System.out.println();
    }

    // Main method for testing
    public static void main(String[] args) {
        LinkedListSequencedCollection<String> collection = new LinkedListSequencedCollection<>();

        collection.addFirst("B");
        collection.addLast("C");
        collection.addFirst("A");
        collection.display();

        System.out.println("First element: " + collection.peekFirst());
        System.out.println("Last element: " + collection.peekLast());

        System.out.println("Removed first: " + collection.removeFirst());
        System.out.println("Removed last: " + collection.removeLast());
        collection.display();
    }
}
